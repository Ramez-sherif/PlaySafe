// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlaySafe.Data;

#nullable disable

namespace PlaySafe.Migrations
{
    [DbContext(typeof(PlaySafeContext))]
    [Migration("20221007212109_tables")]
    partial class tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PlaySafe.Models.Comments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("userID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PlaySafe.Models.Entry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("points")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Entry");
                });

            modelBuilder.Entity("PlaySafe.Models.Match_History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("entryid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("userid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("entryid");

                    b.HasIndex("userid");

                    b.ToTable("Match_History");
                });

            modelBuilder.Entity("PlaySafe.Models.NFC", b =>
                {
                    b.Property<Guid>("NFCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Userid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NFCId");

                    b.HasIndex("Userid");

                    b.ToTable("NFC");
                });

            modelBuilder.Entity("PlaySafe.Models.player", b =>
                {
                    b.Property<Guid>("player_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("admin_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("points")
                        .HasColumnType("int");

                    b.Property<Guid>("userid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("player_Id");

                    b.HasIndex("userid");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("PlaySafe.Models.Specials", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AD_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Special")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AD_id");

                    b.ToTable("Specials");
                });

            modelBuilder.Entity("PlaySafe.Models.User", b =>
                {
                    b.Property<Guid>("user_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_Num")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("u_Typeid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("user_Id");

                    b.HasIndex("u_Typeid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PlaySafe.Models.User_type", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("user_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User_type");
                });

            modelBuilder.Entity("PlaySafe.Models.Usertype_pages", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("pages")
                        .HasColumnType("int");

                    b.Property<Guid>("userTypeid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("userTypeid");

                    b.ToTable("Usertype_pages");
                });

            modelBuilder.Entity("PlaySafe.Models.Comments", b =>
                {
                    b.HasOne("PlaySafe.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("PlaySafe.Models.Match_History", b =>
                {
                    b.HasOne("PlaySafe.Models.Entry", "entry")
                        .WithMany()
                        .HasForeignKey("entryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaySafe.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("entry");

                    b.Navigation("user");
                });

            modelBuilder.Entity("PlaySafe.Models.NFC", b =>
                {
                    b.HasOne("PlaySafe.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("PlaySafe.Models.player", b =>
                {
                    b.HasOne("PlaySafe.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("PlaySafe.Models.Specials", b =>
                {
                    b.HasOne("PlaySafe.Models.User_type", "user_type")
                        .WithMany()
                        .HasForeignKey("AD_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user_type");
                });

            modelBuilder.Entity("PlaySafe.Models.User", b =>
                {
                    b.HasOne("PlaySafe.Models.User_type", "user_type")
                        .WithMany()
                        .HasForeignKey("u_Typeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user_type");
                });

            modelBuilder.Entity("PlaySafe.Models.Usertype_pages", b =>
                {
                    b.HasOne("PlaySafe.Models.User_type", "userTypeID")
                        .WithMany()
                        .HasForeignKey("userTypeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("userTypeID");
                });
#pragma warning restore 612, 618
        }
    }
}
